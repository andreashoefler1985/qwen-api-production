# ~/qwen-api/docker-compose.yml
version: '3.8'

services:
  qwen-api:
    build:
      context: .
      dockerfile: Dockerfile
    user: "1000:1000"
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=500m
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    security_opt:
      - no-new-privileges:true
      - apparmor:unconfined
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./models:/app/models
      - ./cache:/app/cache
      - ./logs:/app/logs
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - API_DOMAIN=${API_DOMAIN}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    user: "999:999"
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes 
      --maxmemory 2gb 
      --maxmemory-policy allkeys-lru
      --bind 0.0.0.0
      --protected-mode yes
   # ~/qwen-api/docker-compose.14b.yml
version: '3.8'
services:
  qwen-api-14b:
    build:
      context: .
      dockerfile: Dockerfile.14b
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./models:/app/models
      - ./cache:/app/cache
      - ./logs:/app/logs
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 60s
      timeout: 30s
      retries: 3

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  redis_data: